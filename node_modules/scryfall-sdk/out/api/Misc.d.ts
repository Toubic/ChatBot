export interface HomepageLink {
    id: number;
    created_at: string;
    updated_at: string;
    priority: number;
    text: string;
    uri: string;
    badge?: string | null;
}
declare const _default: {
    homepageLinks(): Promise<HomepageLink[]>;
    query<T>(apiPath: string | number | (string | number)[], query?: {
        [key: string]: any;
    }, post?: any): Promise<T>;
    queryPage<T_1>(emitter: import("../util/MagicEmitter").default<T_1>, apiPath: string, query: any, page?: number): Promise<void>;
    tryQuery(apiPath: string, query?: {
        [key: string]: any;
    }, post?: any): Promise<{
        result: import("axios").AxiosResponse<any>;
        lastError: import("../util/MagicQuerier").SearchError;
    }>;
    canRetry(error: import("../util/MagicQuerier").SearchError): boolean;
};
export default _default;
